c(66000006666066)
load("~/NYCDSA/Bootcamp/xgboost_jun4_8pm.RData")
importance_matrix = xgb.importance(feature_names = colnames(higgs.train.dummy), model = bst)
library(xgboost)
library(methods)
library(pROC)
library(caret)
library(xgboost)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(dummies)
library(doMC)
registerDoMC(cores = 4)
importance_matrix = xgb.importance(feature_names = colnames(higgs.train.dummy), model = bst)
#Predicting training data
xgmat.train <- xgb.DMatrix(as.matrix(higgs.train.dummy),
label = as.numeric(higgs.labels == "X0"),
weight = scaled.weight)
xgboostTrainPred <- predict(bst, newdata = xgmat.train)
labels <- ifelse(as.character(higgs.labels)=="X1", 1, 0)
auc = roc(labels, xgboostTrainPred)
plot(auc, print.thres=TRUE)
######## From the graph, we can tell the best threshold is 0.002
threshold <- 0.662
err <- mean(as.numeric(xgboostTrainPred >= threshold) != (higgs.labels == "X0"))
#########################
#Predicting the test data
xgmat.test <- xgb.DMatrix(as.matrix(higgs.test.dummy))
xgboostTestPred <- predict(bst, newdata=xgmat.test)
predicted <- rep("s",550000)
predicted[xgboostTestPred>=threshold] <- "b"
weightRank = rank(xgboostTestPred, ties.method= "random")
save.image("~/NYCDSA/Bootcamp/xgboost_jun4_8pm.RData")
ggplot(importance_matrix, aes(x = Feature, y = Gain)) + geom_bar()
ggplot(importance_matrix) + geom_bar(aes(x = Feature, y = Gain))
help(stat_count())
library(ggplot2)
ggplot(importance_matrix, aes(x = Feature, y = Gain)) + geom_bar()
help(stat_count)
ggplot(importance_matrix, aes(x = Feature, y = Gain)) + geom_bar(stat = "identity")
ggplot(importance_matrix, aes(x = Feature, y = Gain)) + geom_bar(stat = "identity") + coord_flip()
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) + geom_bar(stat = "identity") + coord_flip()
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) + geom_bar(stat = "identity") + coord_flip() + scale_fill_brewer()
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) + geom_bar(aes(fill = 1), stat = "identity") + coord_flip()
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) +
geom_bar(aes(fill = 1), stat = "identity") + coord_flip() +
xlab("Variable importance") + ylab("Features") + ggtitle("Variable importance for xgboost") +
guide(fill = F)
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) +
geom_bar(aes(fill = 1), stat = "identity") + coord_flip() +
xlab("Variable importance") + ylab("Features") + ggtitle("Variable importance for xgboost") +
guides(fill = F)
ggplot(importance_matrix, aes(reorder(x = Feature, Gain), y = Gain)) +
geom_bar(aes(fill = 1), stat = "identity") + coord_flip() +
ylab("Variable importance") + xlab("Features") + ggtitle("Variable importance for xgboost") +
guides(fill = F)
rm(list = ls())
seq(10)
seq(2, 1)
2:1
1:1
seq(1, 10
)
seq(1, 1)
q()
setwd("~/NYCDSA/Bootcamp/CapstoneProject/unicorns")
df = read.csv('train_starting.csv')
df$age = factor(df$age, levels = c("0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85-89", "90-94", "95-99", "100+"))
ggplot(df, aes(x = first_browser)) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
library(dplyr)
ggplot(df, aes(x = first_browser)) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
help(reorder)
ggplot(df, aes(reorder(x = first_browser, y))) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(reorder(x = first_browser, (..count..)/sum(..count..)))) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = first_browser)) + geom_bar(aes(x = x, y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
browser = df %>% group_by(first_browser) %>% summarise(pct = n()/nrow(df))
browser
ggplot(browser, aes(reorder(x = first_browser, -pct))) + geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) + geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) + geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(browser)
library(RColorBrewer)
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) + geom_bar(stat = 'identity', fill = factor(2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) + geom_bar(stat = 'identity', fill = first_browser) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_brewer(palette = "Set1")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) + geom_bar(stat = 'identity', aes(fill = first_browser)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_brewer(palette = "Set1")
levels(df$first_browser)
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_brewer(palette = "Set1")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of Scores\n (344 Chapters Total)") + xlab("Score") + ylab("Number of Chapters") +
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of Scores\n (344 Chapters Total)") + xlab("Score") + ylab("Number of Chapters")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + guides(fill = F) +
ggtitle("Distribution of Scores\n (344 Chapters Total)") + xlab("Score") + ylab("Number of Chapters")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
help(element_text)
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(df, aes(x = gender)) + geom_bar()
ggplot(df, aes(x = gender)) + geom_bar() + scale_fill_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(fill = gender) + scale_fill_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(fill = gender)) + scale_fill_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender, y ..count..)) + geom_bar(aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender, y ..count..)) + geom_bar(stat = 'bin', aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender) + geom_bar(stat = 'bin', aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(stat = 'bin', aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(stat = 'count', aes(fill = gender)) + scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..)), aes(fill = gender)) +
scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal()
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal() +
xlab("Gender") + ylab("Percent of users") + ggtitle("Distributino of genders") +
scale_colour_brewer("Set1")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal() +
xlab("Gender") + ylab("Percent of users") + ggtitle("Distributino of genders")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal() +
xlab("Gender") + ylab("Percent of users") + ggtitle("Distributino of genders")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "dodge")
ggplot(df, aes(x = country_destination)) + geom_bar()
ggplot(df, aes(x = country_destination, y = ..count..)) + geom_bar()
ggplot(df, aes(reorder(x = country_destination, ..count..), y = ..count..)) + geom_bar()
ggplot(df, aes(x = country_destination, y = ..count..)) + geom_bar()
country_dist = df %>% group_by(country_destination) %>% summarise(n()/nrow(df))
ggplot(df, aes(reorder(x = country_destination, -pct), y = pct)) + geom_bar()
country_dist = df %>% group_by(country_destination) %>% summarise(pct = n()/nrow(df))
ggplot(df, aes(reorder(x = country_destination, -pct), y = pct)) + geom_bar()
country_dist
ggplot(df, aes(reorder(x = country_destination, -pct), y = pct)) + geom_bar(stat = 'identity')
ggplot(df, aes(reorder(x = country_destination, -pct, y = pct)) + geom_bar(stat = 'identity')
ggplot(df, aes(reorder(x = country_destination, -pct), y = pct)) + geom_bar(stat = 'identity')
ggplot(country_dist, aes(reorder(x = country_destination, -pct), y = pct)) + geom_bar(stat = 'identity')
country_dist = df %>% group_by(country_destination) %>% summarise(pct = n()/nrow(df))
ggplot(country_dist, aes(reorder(x = country_destination, -pct), y = pct)) +
geom_bar(stat = 'identity', fill = country_destination) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of Country of First Destination") + xlab("Country") + ylab("Percent of users")
ggplot(country_dist, aes(reorder(x = country_destination, -pct), y = pct)) +
geom_bar(stat = 'identity', fill = country_destination) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of Country of First Destination") + xlab("Country") + ylab("Percent of users")
names(country_dist)
ggplot(country_dist, aes(reorder(x = country_destination, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = country_destination)) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of Country of First Destination") + xlab("Country") + ylab("Percent of users")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "dodge")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal() +
xlab("Gender") + ylab("Percent of users") + ggtitle("Distributino of genders")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "fill") +
xlab("Country") + ylab("Percent") + ggtitle("Share of gender by country of first destination")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "dodge")
ggplot(df, aes(x = age)) + geom_bar()
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Distribution of age of users")
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Distribution of age of users") +
theme_minimal()
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Distribution of age of users")
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank())+
guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Distribution of age of users")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill") +
xlab("Country") + ylab("Percent") + ggtitle("Share of gender by country of first destination")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "dodge")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill") +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank())+
guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Age distributation of users")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill") +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) +
xlab("Age") + ylab("Percent") + ggtitle("Share pf gender by age")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "dodge")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill")
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill") +
scale_fill_brewer("Greens")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill") +
scale_fill_brewer("RdBl")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill") +
scale_colour_brewer("RdBl")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = age), position = "fill") +
scale_fill_brewer("RdBl")
levels(df$age)
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = colorRampPalette(brewer.pal(9, "RdBl"))(21)), position = "fill")
help("brewer.pal")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = colorRampPalette(brewer.pal(9, "RdBu"))(21)), position = "fill")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill")
help("scale_colour_brewer")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_colour_brewer(colorRampPalette(brewer.pal(9, "RdBu"))(21))
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_colour_brewer("Blues")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_brewer("Blues")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_brewer(colorRampPalette(brewer.pal(9, "RdBu"))(21))
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(colorRampPalette(brewer.pal(9, "RdBu"))(21))
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = colorRampPalette(brewer.pal(9, "RdBu"))(21))
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = rev(colorRampPalette(brewer.pal(9, "RdBu"))(21)))
help("scale_fill_manual")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = rev(colorRampPalette(brewer.pal(9, "RdBu"))(21)), na.value = "red")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = rev(colorRampPalette(brewer.pal(9, "RdBu"))(21)), na.value = "grey")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = rev(colorRampPalette(brewer.pal(9, "RdBu"))(21)), na.value = "grey") +
theme_minimal() + xlab("Country") + ylab("Percent") + ggtitle("Share of age by country of first destination")
ggplot(df, aes(x = bookings)) + geom_bar()
ggplot(df, aes(x = lag_account_created)) + geom_bar()
ggplot(df, aes(x = lag_first_active)) + geom_bar()
ggplot(df, aes(x = lag_account_created_first_active)) + geom_bar()
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = bookings)) + geom_bar()
ggplot(df, aes(x = lag_account_created)) + geom_bar()
ggplot(df, aes(x = lag_first_active)) + geom_bar()
ggplot(df, aes(x = bookings)) + geom_bar()
ggplot(df, aes(x = bookings)) + geom_bar(fill = bookings) + scale_color_brewer("Set1")
ggplot(df, aes(x = bookings)) + geom_bar(aes(fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = lag_account_created)) + geom_bar()
ggplot(df, aes(x = bookings)) + geom_bar(aes(fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = bookings, y = (..count..)/sum(..count..))) +
geom_bar(stat = 'identity', aes(fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = bookings) +
geom_bar(stat = 'identity', aes( y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = bookings)) +
geom_bar(stat = 'identity', aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank())+
guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Age distributation of users")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1") +
xlab("When the user booked") + ylab("Percent of users") + ggtitle("Time of booking distribution")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1") +
xlab("When the user booked") + ylab("Percent of users") +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = lag_account_created)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_account_created)) + scale_color_brewer("Set1") +
xlab("When the user booked") + ylab("Percent of users") +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = lag_account_created)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_account_created)) + scale_color_brewer("Set1") +
xlab("Difference between when account was created and date of first booking") + ylab("Percent of users") + guides(fill = F)
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = lag_account_created)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_account_created)) + scale_color_brewer("Set1") +
xlab("Difference between when account was created and date of first booking") + ylab("Percent of users") + guides(fill = F) +
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = lag_account_created)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_account_created)) + scale_color_brewer("Set1") +
xlab("Difference between when account was\n created and date of first booking") + ylab("Percent of users") + guides(fill = F) +
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = lag_first_active)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_first_active)) + scale_color_brewer("Set1") +
xlab("Difference between user's first activity\nand date of first booking") + ylab("Percent of users") + guides(fill = F) +
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
help(guides)
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + guides(labels = c("A", "B"))
help(legend)
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + guide_legend(labels = c("A", "B"))
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + guide_legend(labels = c("A", "B"))
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + scale_fill_brewer(labels = c("A", "B"))
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + scale_fill_brewer(palette = "Set1", labels = c("A", "B"))
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer("Set1") +
xlab("When the user booked") + ylab("Percent of users") + guides(fill = F) +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer(palette = "Set1") +
xlab("When the user booked") + ylab("Percent of users") + guides(fill = F) +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") + scale_fill_brewer(palette = "Set1", labels = c("A", "B"))
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", title = "sd")
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "sd")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer(palette = "Set1") +
xlab("When the user booked") + ylab("Percent of users") + guides(fill = F) +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Difference between when account was\ncreated and date of first booking") +
ylab("Percent") + ggtitle("How long do users wait to book?")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = bookings), position = "fill")
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Country") + ylab("Percent") + ggtitle("How long do users wait to book by country of first destination?")
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Difference between when account was\ncreated and date of first booking") +
ylab("Percent") + ggtitle("How long do users wait to book?")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = bookings), position = "fill")
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Country") + ylab("Percent") + ggtitle("How long do users wait to book by country of first destination?")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Country") + ylab("Percent") + ggtitle("How long do users wait to book by country of first destination?")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Country") + ylab("Percent") + ggtitle("How long do users wait to book by country of first destination?") +
theme_minimal()
ggplot(df, aes(x = lag_first_active)) + geom_bar(aes(fill = bookings), position = "fill")
ggplot(browser, aes(reorder(x = first_browser, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = colorRampPalette(brewer.pal(9, "Set1"))(52))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) + guides(fill = F) +
ggtitle("Distribution of First Browser") + xlab("Browser") + ylab("Percent of users")
ggplot(df, aes(x = gender)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = gender)) +
scale_colour_brewer("Set1") + theme_minimal() +
xlab("Gender") + ylab("Percent of users") + ggtitle("Distributino of genders")
country_dist = df %>% group_by(country_destination) %>% summarise(pct = n()/nrow(df))
ggplot(country_dist, aes(reorder(x = country_destination, -pct), y = pct)) +
geom_bar(stat = 'identity', aes(fill = country_destination)) + theme_minimal() + guides(fill = F) +
ggtitle("Distribution of country of first destination") + xlab("Country") + ylab("Percent of users")
ggplot(df, aes(x = country_destination)) + geom_bar(aes(fill = gender), position = "fill") +
xlab("Country") + ylab("Percent") + ggtitle("Share of gender by country of first destination")
ggplot(df, aes(x = age)) + geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank())+
guides(fill = F) +
xlab("Age") + ylab("Percent of users") + ggtitle("Age distributation of users")
ggplot(df, aes(x = age)) + geom_bar(aes(fill = gender), position = "fill") +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.ticks = element_blank()) +
xlab("Age") + ylab("Percent") + ggtitle("Share of gender by age")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = age), position = "fill") +
scale_fill_manual(values = rev(colorRampPalette(brewer.pal(9, "RdBu"))(21)), na.value = "grey") +
theme_minimal() + xlab("Country") + ylab("Percent") + ggtitle("Share of age by country of first destination")
ggplot(df, aes(x = bookings)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = bookings)) + scale_color_brewer(palette = "Set1") +
xlab("When the user booked") + ylab("Percent of users") + guides(fill = F) +
ggtitle("Time of booking distribution") + theme_minimal()
ggplot(df, aes(x = lag_account_created)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_account_created)) + scale_color_brewer("Set1") +
xlab("Difference between when account was\ncreated and date of first booking") + ylab("Percent of users") + guides(fill = F) +
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = lag_first_active)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = lag_first_active)) + scale_color_brewer("Set1") +
xlab("Difference between user's first activity\nand date of first booking") + ylab("Percent of users") + guides(fill = F) +
ggtitle("How much time does it take a user to book?") + theme_minimal()
ggplot(df, aes(x = lag_account_created_first_active)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Difference between when account was\ncreated and date of first booking") +
ylab("Percent") + ggtitle("How long do users wait to book?")
ggplot(df, aes(x = country_destination)) +
geom_bar(aes(fill = bookings), position = "fill") +
scale_fill_brewer(palette = "Set1", name = "When user booked", labels = c("Early", "Did not book", "Waited")) +
xlab("Country") + ylab("Percent") + ggtitle("How long do users wait to book by country of first destination?") +
theme_minimal()
setwd("~/NYCDSA/Bootcamp/CapstoneProject/unicorns/ShinyMap/AirbnbBookings")
shiny::runApp()
library(shiny)
library(dplyr)
library(ggplot2)
library(countrycode)
library(googleVis)
library(shinydashboard)
library(shinythemes)
library(plotly)
runApp()
t = data.frame(abr = c("AU", "CA", "DE", "ES", "FR", "GB", "IT", "NL", "PT", "US"),
country.name = c("Australia", "Canada", "Germany", "Spain", "France", "United Kingdom", "Italy", "Netherlands", "Portugal", "United States"),
destination = 1)
View(t)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df = read.csv('../../train_starting.csv')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(img)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
